board = [' ' for x in range(10)]

#Inserting letter at given position
def insertLetter(letter,pos):
    board[pos] = letter

#Checking if the input position is empty or not
def spaceIsFree(pos):
    return board[pos] == ' '

#Printing the board with updated values in each step
def printBoard(board):
    print('   |   |   ')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3])
    print('   |   |   ')
    print('------------')
    print('   |   |   ')
    print(' ' + board[4] + ' | ' + board[5] + ' | ' + board[6])
    print('   |   |   ')
    print('------------')
    print('   |   |   ')
    print(' ' + board[7] + ' | ' + board[8] + ' | ' + board[9])
    print('   |   |   ')

#Checking if the board is full or not. Return Flase if board is empty otherwise return True
def isBoardFull(board):
    if board.count(' ') > 1:
        return False
    else:
        return True

#These are all the possibilities to win a match
def IsWinner(b,l):
    return ((b[1] == l and b[2] == l and b[3] == l) or
    (b[4] == l and b[5] == l and b[6] == l) or
    (b[7] == l and b[8] == l and b[9] == l) or
    (b[1] == l and b[4] == l and b[7] == l) or
    (b[2] == l and b[5] == l and b[8] == l) or
    (b[3] == l and b[6] == l and b[9] == l) or
    (b[1] == l and b[5] == l and b[9] == l) or
    (b[3] == l and b[5] == l and b[7] == l))

def playerMove():
    run = True
    while run:
        #Taking the input from the user to insert "X" in specified position.
        move = input("please select a position to enter the X between 1 to 9")
        try:
            move = int(move)
            #Position should be in between 1 and 9 including 1st and 9th position
            if move > 0 and move < 10:
                if spaceIsFree(move):
                    run = False
                    insertLetter('X' , move)
                else:
                    print('Sorry, this space is occupied')
            else:
                print('please type a number between 1 and 9')

        except:
            print('Please type a number')

def computerMove():
    #possiblemoves stores the list of empty positions
    #For example [1,3,4,5,6,7,8,9]
    possibleMoves = [x for x , letter in enumerate(board) if letter == ' ' and x != 0  ]
    move = 0
    #This is the loop in which computers inserts 'O' in between 'X' if the user is about to win
    for let in ['O' , 'X']: #Iterating through 'O' and then 'X'
        for i in possibleMoves: #possibleMoves = [1,3,4,5,6,7,8,9]
            boardcopy = board[:] #Storing all values of board in boardcopy variable.
            #For example board = ['','x','o','','x','o']
            #For example board = ['o','x','o','','x','o']
            boardcopy[i] = let # i will be 1,3,4,5,6,7,8,9 from the above example. let will be 'O' and then 'X'
            if IsWinner(boardcopy, let):
                move = i
                return move
    #This is the condition where computer inserts 'O' in corner positions  randomly if corners are empty.
    cornersOpen = []
    for i in possibleMoves:
        if i in [1 , 3 , 7 , 9]:
            cornersOpen.append(i)
    #Checking if corners are empty or not
    if len(cornersOpen) > 0:
        move = selectRandom(cornersOpen)
        return move
    #If corners are not empty, then 'O' will be inserted in 5th position
    if 5 in possibleMoves:
        move = 5
        return move
    #If corner positions are not empty and 5th position is also not empty, then 'O' will be randomly inserted in edges.
    edgesOpen = []
    for i in possibleMoves:
        if i in [2,4,6,8]:
            edgesOpen.append(i)
    #Checking if edges are empty or not
    if len(edgesOpen) > 0:
        move = selectRandom(edgesOpen)
        return move

def selectRandom(li):
    import random #importing random module to select random positions
    ln = len(li)
    r = random.randrange(0,ln)
    return li[r]
#This is the main function of the program. The execution of functions begins from here
def main():
    print("Welcome to the game!")
    printBoard(board)

    while not(isBoardFull(board)):
        if not(IsWinner(board , 'O')):
            playerMove()
            printBoard(board)
        else:
            print("sorry you loose!")
            break

        if not(IsWinner(board , 'X')):
            move = computerMove()
            if move == 0:
                print(" ")
            else:
                insertLetter('O' , move)
                print('computer placed an o on position' , move , ':')
                printBoard(board)
        else:
            print("you win!")
            break



    if isBoardFull(board):
        print("Tie game")
#Execution of code starts from here
while True:
    x = input("Do you want to play again? (y/n)")
    if x.lower() == 'y':
        board = [' ' for x in range(10)]
        print('--------------------')
        main()
    else:
        break
